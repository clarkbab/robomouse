#! /usr/bin/env python3

import sys
import mice
from optparse import OptionParser
from maze import Maze
from display import Display
from controller import Controller

if __name__ == '__main__':
    # Parse options.
    parser = OptionParser()
    parser.add_option('-d', '--delay', dest='delay', help='delay between steps in ms.', default=0, type='int')
    parser.add_option('-D', '--display', action='store_true', dest='display', help='show display', default=False)
    parser.add_option('-M', '--maze', dest='maze', help='path to a maze file.')
    parser.add_option('-m', '--mouse', dest='mouse', help='path to a mouse file.')
    parser.add_option('-p', '--pause', action='store_true', dest='pause', help='pause between runs', default=False)
    parser.add_option('-s', '--max_steps', dest='max_steps', help='max number of steps per run.', default=1000, type='int') 
    parser.add_option('-v', '--verbose', action='store_true', dest='verbose', help='log info.', default=False)
    opts, args = parser.parse_args()

    # Create the maze.
    maze = Maze(opts.maze)
    
    # Create the display.
    display = None
    if opts.display: display = Display(maze)
        
    # Create and place the mouse.
    mouse_class = getattr(mice, opts.mouse)
    mouse = mouse_class(maze.dim)
    init_state = { 'pos': [0, 0], 'heading': Maze.NORTH }

    # Create the controller.
    controller = Controller(
        mouse,
        maze,
        init_state,
        max_steps=opts.max_steps,
        delay=opts.delay,
        pause=opts.pause,
        verbose=opts.verbose
    )

    # Run the game.
    if display:
        controller.run_with_display(display)
    else:
        controller.run()

    # Print results.
    print(f"Steps taken: {controller.steps}")
    print(f"Score: {controller.score()}")

    sys.exit(0)

